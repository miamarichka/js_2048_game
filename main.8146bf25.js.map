{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","score","board","Array","fill","map","el","rows","columns","button","messageLose","messageWin","messageStart","setGame","emptyTiles","forEach","row","rowIndex","cell","cellIndex","push","length","randomizer","Math","random","floor","rowI","cellI","isGameOver","anyEmptyField","some","r","c","classList","remove","updateGame","cells","innerText","className","innerHTML","add","clearZero","filter","slide","toMergeRow","i","moveHorizontal","isItRight","reverse","moveVertical","isItDown","addEventListener","contains","e","code"],"mappings":"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","file":"main.8146bf25.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst table = document.querySelector('table');\r\nlet score = 0;\r\n\r\nlet board = new Array(4)\r\n  .fill(null)\r\n  .map(el => [0, 0, 0, 0]);\r\n\r\nconst rows = 4;\r\nconst columns = 4;\r\n\r\nconst button = document.querySelector('button');\r\nconst messageLose = document.querySelector('.message-lose');\r\nconst messageWin = document.querySelector('.message-win');\r\nconst messageStart = document.querySelector('.message-start');\r\n\r\nbutton.addEventListener('click', () => {\r\n  if (button.classList.contains('start')) {\r\n    button.classList.remove('start');\r\n    button.classList.add('restart');\r\n    button.innerText = 'Restart';\r\n\r\n    messageStart.classList.add('hidden');\r\n  } else if (button.classList.contains('restart')) {\r\n    board = new Array(4)\r\n      .fill(null)\r\n      .map(el => [0, 0, 0, 0]);\r\n\r\n    messageLose.classList.add('hidden');\r\n    messageWin.classList.add('hidden');\r\n    score = 0;\r\n  }\r\n  setGame();\r\n  setGame();\r\n  updateGame();\r\n});\r\n\r\nfunction setGame() {\r\n  const emptyTiles = [];\r\n\r\n  board.forEach((row, rowIndex) => {\r\n    row.forEach((cell, cellIndex) => {\r\n      if (cell === 0) {\r\n        emptyTiles.push([rowIndex, cellIndex]);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (!emptyTiles.length) {\r\n    return;\r\n  }\r\n\r\n  const randomizer = (Math.random() <= 0.1) ? 4 : 2;\r\n  const [rowI, cellI]\r\n        = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\r\n\r\n  board[rowI][cellI] = randomizer;\r\n\r\n  isGameOver();\r\n}\r\n\r\nfunction isGameOver() {\r\n  const anyEmptyField = board.some(row => row.some(cell => cell === 0));\r\n\r\n  if (anyEmptyField) {\r\n    return;\r\n  }\r\n\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < columns - 1; c++) {\r\n      if (board[r][c] === board[r][c + 1]\r\n                || board[c][r] === board[c + 1][r]) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  messageLose.classList.remove('hidden');\r\n}\r\n\r\nfunction updateGame() {\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < columns; c++) {\r\n      if (board[r][c] === 0) {\r\n        table.rows[r].cells[c].innerText = '';\r\n        table.rows[r].cells[c].className = 'field-cell';\r\n      } else {\r\n        table.rows[r].cells[c].innerHTML = board[r][c];\r\n        table.rows[r].cells[c].classList.add(`field-cell--${board[r][c]}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  isGameOver();\r\n  document.querySelector('.game-score').innerText = score;\r\n};\r\n\r\nfunction clearZero(row) {\r\n  return row.filter(r => r !== 0);\r\n}\r\n\r\nfunction slide(row) {\r\n  let toMergeRow = clearZero(row);\r\n\r\n  for (let i = 0; i < toMergeRow.length - 1; i++) {\r\n    if (toMergeRow[i] === toMergeRow[i + 1]) {\r\n      toMergeRow[i] *= 2;\r\n      toMergeRow[i + 1] = 0;\r\n      score += toMergeRow[i];\r\n    }\r\n  }\r\n\r\n  toMergeRow = clearZero(toMergeRow);\r\n\r\n  while (toMergeRow.length < rows) {\r\n    toMergeRow.push(0);\r\n  }\r\n\r\n  return toMergeRow;\r\n};\r\n\r\ndocument.addEventListener('keyup', (e) => {\r\n  switch (e.code) {\r\n    case 'ArrowLeft':\r\n      moveHorizontal(false);\r\n      break;\r\n\r\n    case 'ArrowRight':\r\n      moveHorizontal(true);\r\n      break;\r\n\r\n    case 'ArrowUp':\r\n      moveVertical(false);\r\n\r\n      break;\r\n\r\n    case 'ArrowDown':\r\n      moveVertical(true);\r\n      break;\r\n  }\r\n\r\n  setGame();\r\n  setGame();\r\n  updateGame();\r\n});\r\n\r\nfunction moveHorizontal(isItRight) {\r\n  for (let i = 0; i < rows; i++) {\r\n    let row = board[i];\r\n\r\n    if (isItRight) {\r\n      row.reverse();\r\n    }\r\n    row = slide(row);\r\n\r\n    if (isItRight) {\r\n      board[i] = row.reverse();\r\n    } else {\r\n      board[i] = row;\r\n    }\r\n  }\r\n};\r\n\r\nfunction moveVertical(isItDown) {\r\n  for (let c = 0; c < columns; c++) {\r\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\r\n\r\n    if (isItDown) {\r\n      row.reverse();\r\n      row = slide(row);\r\n      row.reverse();\r\n    } else {\r\n      row = slide(row);\r\n    }\r\n    board[0][c] = row[0];\r\n    board[1][c] = row[1];\r\n    board[2][c] = row[2];\r\n    board[3][c] = row[3];\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      board[i][c] = row[i];\r\n    };\r\n  }\r\n};\r\n"]}